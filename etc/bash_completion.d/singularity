

_singularity()
{
  local cur cmd opts cmd_idx
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev_idx=$(( $COMP_CWORD - 1))
  prev="${COMP_WORDS[$prev_idx]}"

  # TODO: This can be dynamically generated by the following:
  #   find /opt/singularity/libexec/singularity/cli -maxdepth 1 -mindepth 1 -name '*.exec' -type f -exec basename {} \; | sed -e 's|.exec||' | sort -u
  # but we then need to auto-generate this file with autoconf.
  local -r cmds="help exec run shell test \
    bootstrap copy create expand export import mount"

  # Find the first command (skipping any global options)
  cmd_idx=1
  while [ $cmd_idx -lt $COMP_CWORD ]; do
    cmd="${COMP_WORDS[$cmd_idx]}"
    if [[ ${cmd} != -* ]] ; then
      break;
    fi
    cmd_idx=$(( $cmd_idx + 1 ))
  done

  # In this case, no command is present.
  if [ $cmd_idx -eq $COMP_CWORD ]; then
  opts="-h -help --help -v -vv -vvv -vvvv --verbose --debug --quiet -q -d"
    if [[ ${cur} == -* ]] ; then
      COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
      return 0
    fi
    COMPREPLY=( $(compgen -W "${opts} ${cmds}" -- ${cur}) )
    return 0
  fi

  case "${cmd}" in
    help)
      return 0
      ;;

    run|shell|exec)
      if [[ ${cur} == -B || ${cur} == --bind ]]; then
        #TODO: Not really a path, but this should be a bind spec...
        COMPREPLY=( $(compgen -f -- ${cur}) )
      elif [[ ${cur} == -H || ${cur} == --home ]]; then
        COMPREPLY=( $(compgen -f -- ${cur}) )
      elif [[ ${cur} == -* ]] ; then
        COMPREPLY=( $(compgen -W "--bind --home --contain --containall --ipc --pid --user --workdir --writable" -- ${cur}) )
      else
        #TODO: If a path has already been given, then we ought to treat the rest of the options as a command.
        COMPREPLY=( $(compgen -f -o filenames -- ${cur}) )
      fi
      return 0
      ;;

  esac
}

complete -d -F _singularity singularity

