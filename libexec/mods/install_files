#!/bin/sh
# 
# Copyright (c) 2015, Gregory M. Kurtzer
# All rights reserved.
# 
# Copyright (c) 2015, The Regents of the University of California,
# through Lawrence Berkeley National Laboratory (subject to receipt of
# any required approvals from the U.S. Dept. of Energy).
# All rights reserved.
# 
# 

if [ -z "$libexecdir" ]; then
    echo "Could not identify the Singularity libexecdir."
    exit 1
fi

if [ -f "$libexecdir/singularity/functions" ]; then
    . "$libexecdir/singularity/functions"
else
    echo "Error loading functions: $libexecdir/singularity/functions"
    exit 1
fi

if [ -z "$SAPPSPEC" ]; then
    message 0 "ERROR: SAPP specfile not given\n"
    exit 1
fi

if [ -z "$SAPPDIR" ]; then
    message 0 "ERROR: SAPPDIR not given\n"
    exit 1
fi



if [ ! -d "$SAPPDIR/c" ]; then
    if ! mkdir -p "$SAPPDIR/c" 2>/dev/null; then
        message 0 "ERROR: Could not container directory $SAPPDIR/c\n";
        exit 1
    fi
fi


DEBUGOS_FILES="arch basename cat cksum cp date dd df du echo env expand expr
false find groups head hostid id install join link ln ls md5sum mkdir mkfifo
mknod mktemp mv nice nl nohup nproc numfmt od pathchk ps top printenv printf
pwd readlink realpath rm rmdir runcon seq sha1sum sha224sum sha256sum
sha384sum sha512sum sleep sort split stat stdbuf strace stty sum sync tac
tail tee test touch tr true tty uname unexpand uniq unlink users vdir wc who
whoami yes vi /etc/terminfo /usr/share/terminfo"


# Things we always just must have
message 1 "Evaluating: hard requirements\n"
for i in "/bin/sh" "/bin/["; do
    if [ -f "$i" ]; then
        if ! copy_file_to_sappdir "$i"; then
            message 0 "Error: failed processing requires: $i\n"
            exit 1
        fi
    fi
done
if [ "$?" -ne "0" ]; then
    exit 1
fi

# Build a base mini distro
DEBUGOS=`get_key_from_conf "debugos" "$SAPPSPEC"`
if [ -n "$DEBUGOS" -a "$DEBUGOS" != "0" -a "$DEBUGOS" != "no" ]; then
    for i in $DEBUGOS_FILES; do
        if FILE=`which $i 2>/dev/null`; then
            if ! copy_file_to_sappdir "$FILE"; then
                message 0 "Error: failed processing requires: $FILE\n"
                exit 1
            fi
        elif [ -e "$i" ]; then
            if ! copy_file_to_sappdir "$i"; then
                message 0 "Error: failed processing requires: $i\n"
                exit 1
            fi
        fi
    done
fi
if [ "$?" -ne "0" ]; then
    exit 1
fi

# Pull in defined keys that specify files
message 1 "Evaluating: Exec\n"
get_key_from_conf "exec" "$SAPPSPEC" | while read prog args; do
    if FULLFILE=`which "$prog" 2>/dev/null`; then
        copy_file_to_sappdir "$FULLFILE"
    else
        message 0 "Error: failed processing program: $prog\n"
        exit 1
    fi
done
if [ "$?" -ne "0" ]; then
    exit 1
fi

# Pull in the %files section of the spec
message 1 "Evaluating: %files\n"
get_section_from_conf "files" "$SAPPSPEC" | while read file dir; do
    if [ -n "$file" ]; then
        if ! copy_file_to_sappdir "$file" "$dir"; then
            message 0 "Error: failed processing file: $a\n"
            exit 1
        fi
    fi
done
if [ "$?" -ne "0" ]; then
    exit 1
fi

exit 0
