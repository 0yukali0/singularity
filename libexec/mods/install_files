#!/bin/sh
# 
# Copyright (c) 2015, Gregory M. Kurtzer
# All rights reserved.
# 
# Copyright (c) 2015, The Regents of the University of California,
# through Lawrence Berkeley National Laboratory (subject to receipt of
# any required approvals from the U.S. Dept. of Energy).
# All rights reserved.
# 
# 

if [ -z "$libexecdir" ]; then
    echo "Could not identify the Singularity libexecdir."
    exit 1
fi

if [ -f "$libexecdir/singularity/functions" ]; then
    . "$libexecdir/singularity/functions"
else
    echo "Error loading functions: $libexecdir/singularity/functions"
    exit 1
fi

if [ -z "$SAPPSPEC" ]; then
    message 0 "ERROR: SAPP specfile not given\n"
    exit 1
fi

if [ -z "$INSTALLDIR" ]; then
    message 0 "ERROR: INSTALLDIR not given\n"
    exit 1
fi


if [ ! -d "$INSTALLDIR/c" ]; then
    if ! mkdir -p "$INSTALLDIR/c" 2>/dev/null; then
        message 0 "ERROR: Could not container directory $INSTALLDIR/c\n";
        exit 1
    fi
fi

INCLUDE_FILES0="/bin/sh"

INCLUDE_FILES1="strace"

INCLUDE_FILES2="arch cat cp date find id pwd ls ps stat touch uname"

INCLUDE_FILES3="basename cksum dd df du env expand expr false groups head
hostid install join link ln ls md5sum mkdir mkfifo mknod mktemp mv nice
nl nohup nproc numfmt od pathchk top printenv printf readlink realpath rm
rmdir runcon seq sort split stdbuf stty sum sync tac tail tee test tr
true tty unexpand uniq unlink users vdir wc who whoami yes vi
/etc/terminfo /usr/share/terminfo"

DEBUGOS=`get_key_from_conf "debugos" "$SAPPSPEC"`

case ${DEBUGOS:-1} in
    no|0)   INCLUDE_FILES="$INCLUDE_FILES0" ;;
    1)      INCLUDE_FILES="$INCLUDE_FILES0 $INCLUDE_FILES1" ;;
    2)      INCLUDE_FILES="$INCLUDE_FILES0 $INCLUDE_FILES1 $INCLUDE_FILES2" ;;
    yes|3)  INCLUDE_FILES="$INCLUDE_FILES0 $INCLUDE_FILES1 $INCLUDE_FILES2 $INCLUDE_FILES3" ;;
    [0-9]*) INCLUDE_FILES="$INCLUDE_FILES0 $INCLUDE_FILES1 $INCLUDE_FILES2 $INCLUDE_FILES3" ;;
    *)      INCLUDE_FILES="$INCLUDE_FILES0 $INCLUDE_FILES1" ;;
esac


# Build a base mini distro
for i in $INCLUDE_FILES; do
    if FILE=`which $i 2>/dev/null`; then
        if ! install_file "$FILE"; then
            message 0 "Error: failed processing requires: $FILE\n"
            exit 1
        fi
    elif [ -e "$i" ]; then
        if ! install_file "$i"; then
            message 0 "Error: failed processing requires: $i\n"
            exit 1
        fi
    fi
done
if [ "$?" -ne "0" ]; then
    exit 1
fi

# Pull in defined keys that specify files
message 1 "Evaluating: Exec\n"
get_key_from_conf "exec" "$SAPPSPEC" | while read prog args; do
    if FULLFILE=`which "$prog" 2>/dev/null`; then
        install_file "$FULLFILE"
    else
        message 0 "Error: failed processing program: $prog\n"
        exit 1
    fi
done
if [ "$?" -ne "0" ]; then
    exit 1
fi

# Pull in the %files section of the spec
message 1 "Evaluating: %files\n"
get_section_from_conf "files" "$SAPPSPEC" | while read file dir; do
    if [ -n "$file" ]; then
        if ! install_file "$file" "$dir"; then
            message 0 "Error: failed processing file: $a\n"
            exit 1
        fi
    fi
done
if [ "$?" -ne "0" ]; then
    exit 1
fi

exit 0
