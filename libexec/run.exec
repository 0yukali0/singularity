#!/bin/sh
# 
# Copyright (c) 2015, Gregory M. Kurtzer
# All rights reserved.
# 
# Copyright (c) 2015, The Regents of the University of California,
# through Lawrence Berkeley National Laboratory (subject to receipt of
# any required approvals from the U.S. Dept. of Energy).
# All rights reserved.
# 
# 

if [ -z "$libexecdir" ]; then
    echo "Could not identify the Singularity libexecdir."
    exit 1
fi

if [ -f "$libexecdir/singularity/functions" ]; then
    . "$libexecdir/singularity/functions"
else
    echo "Error loading functions: $libexecdir/singularity/functions"
    exit 1
fi

while true; do
    case $1 in
        -c|--contain)
            SINGULARITY_CONTAIN=1
            export SINGULARITY_CONTAIN
            shift
        ;;
        -*)
            echo "ERROR: Unknown option: $1"
            exit 1
        ;;
        *)
            break;
        ;;
    esac
done


SAPPNAME="$1"
SAPPCACHE="$HOME/.sapp-cache"
SAPPDIR="$SAPPCACHE/$SAPPNAME"
export SAPPCACHE SAPPDIR SAPPNAME
shift

if [ -z "$SAPPNAME" ]; then
    message 0 "USAGE: singularity (options) run [SAPP Name] (SAPP options)\n"
    exit 1
fi

if [ ! -x "$libexecdir/singularity/sexec" ]; then
    message 0 "ERROR: Sexec not found\n"
    exit 1
fi

message 2 "Running '$SAPPNAME'\n"

#if ! run_module sappdir_filecheck; then
#    message 0 "Not launching SAPP container\n"
#    exit 1
#fi

# Catch the signal for the parent.. 
trap true INT KILL

SAPPCONTAINER="$SAPPDIR/c"
SINGULARITY_COMMAND="run"
export SAPPCONTAINER SINGULARITY_COMMAND

message 2 "Exec'ing Sexec\n"
exec "$libexecdir/singularity/sexec" "$@" <&0 &

CHILD_PID=$!
message 2 "Waiting for child pid $CHILD_PID\n"

echo -ne "$CHILD_PID " >> "$SAPPDIR/c/pids"
wait $CHILD_PID 2>/dev/null
RETVAL=$?

sed -i -e "s@$CHILD_PID @@" "$SAPPDIR/c/pids"

message 2 "Child pid $CHILD_PID returned\n"

# Recheck SAPP cache
#if ! run_module sappdir_filecheck; then
#    message 0 "ERROR: Removing cached SAPP!\n"
#    run_module sappdir_delete
#    exit 1
#fi

exit $RETVAL
