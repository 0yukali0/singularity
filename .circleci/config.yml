version: 2.1

orbs:
  go: circleci/go@1.6

parameters:
  go-version:
    type: string
    default: 1.14.9

executors:
  golang:
    parameters:
      variant:
        description: "variant (ex. alpine)"
        default: ""
        type: string
    docker:
      - image: golang:<< pipeline.parameters.go-version >><<# parameters.variant >>-<< parameters.variant >><</ parameters.variant >>
        auth:
          username: $CIRCLE_CI_DOCKER_USERNAME
          password: $CIRCLE_CI_DOCKER_PASSWORD
  macos-machine:
    macos:
      xcode: "10.2.0"
  ubuntu-machine:
    working_directory: ~/go/singularity
    machine:
      image: ubuntu-2004:202008-01

commands:
  stop-background-apt:
    steps:
      - run:
          name: Stop background apt updates
          # https://discuss.circleci.com/t/could-not-get-lock-var-lib-apt-lists-lock/28337/4
          command: sudo killall -9 apt-get || true
  install-deps-apt:
    parameters:
      sudo:
        type: boolean
        default: true
    steps:
      - run:
          name: Update package indexes
          command: <<# parameters.sudo >>sudo <</ parameters.sudo >>apt-get -q update
      - run:
          name: Install dependencies
          command: <<# parameters.sudo >>sudo <</ parameters.sudo >>apt-get -q install -y build-essential squashfs-tools libseccomp-dev libssl-dev uuid-dev cryptsetup-bin
  build-singularity:
    steps:
      - run:
          name: Configure Singularity
          command: ./mconfig -v -p /usr/local
      - run:
          name: Build Singularity
          command: make -C ./builddir all

x-run:
  buildtest_rpm: &buildtest_rpm
    name: Build and test rpm under docker
    no_output_timeout: 10m
    command: |-
      export E2E_DOCKER_USERNAME=$CIRCLE_CI_DOCKER_USERNAME && \
      export E2E_DOCKER_PASSWORD=$CIRCLE_CI_DOCKER_PASSWORD && \
      scripts/ci-docker-run

  check_singularity: &check_singularity
    name: Check Singularity
    command: |-
      make -C ./builddir check

  install_singularity: &install_singularity
    name: Install Singularity
    command: |-
      sudo make -C ./builddir install

  check_changes: &check_changes
    name: Check changes
    command: |-
      rc=0
      scripts/should-e2e-run "${CIRCLE_PROJECT_USERNAME}" "${CIRCLE_PROJECT_REPONAME}" "${CIRCLE_BRANCH}" "${CIRCLE_PULL_REQUEST}" || rc=$?
      case $rc in
        0)
          echo "Verifying critical changes"
          ;;

        1)
          echo "No critical changes, skipping tests"
          circleci step halt
          ;;

        *)
          echo "E: scripts/should-e2e-run returned with exit code $rc. Abort."
          exit $rc
          ;;
      esac

jobs:
  check_go_mod:
    executor: golang
    steps:
      - checkout
      - run:
          name: Check go.mod
          command: scripts/check-go.mod

  go114-stretch:
    executor:
      name: golang
      variant: stretch
    steps:
      - checkout
      - install-deps-apt:
          sudo: false
      - build-singularity
      - run:
          <<: *check_singularity

  go114-alpine:
    executor:
      name: golang
      variant: alpine
    steps:
      - checkout
      - run:
          name: Fetch deps
          command: apk add -q --no-cache git alpine-sdk automake libtool linux-headers libarchive-dev util-linux-dev libuuid openssl-dev gawk sed cryptsetup
      - build-singularity
      - run:
          <<: *check_singularity

  go114-darwin:
    executor: macos-machine
    working_directory: /Users/distiller/go/src/github.com/sylabs/singularity
    steps:
      - checkout
      - go/install:
          version: << pipeline.parameters.go-version >>
      - build-singularity
      - run:
          name: Check code
          command: |-
            make -C ./builddir check

  rpmbuild-centos7:
    executor: ubuntu-machine
    steps:
      - checkout
      - run:
          name: set OS type and version
          command: echo 'export OS_TYPE=centos OS_VERSION=7' >> $BASH_ENV
      - run:
          <<: *buildtest_rpm

  rpmbuild-centos8:
    executor: ubuntu-machine
    steps:
      - checkout
      - run:
          name: set OS type and version
          command: echo 'export OS_TYPE=centos OS_VERSION=8' >> $BASH_ENV
      - run:
          <<: *buildtest_rpm

  short_unit_tests:
    executor: ubuntu-machine
    steps:
      - checkout
      - go/install:
          version: << pipeline.parameters.go-version >>
          cache: no
      - stop-background-apt
      - install-deps-apt
      - build-singularity
      - run:
          <<: *install_singularity
      - run:
          name: Run unit tests
          command: |-
            make -C ./builddir short-unit-test

  integration_tests:
    executor: ubuntu-machine
    steps:
      - checkout
      - run:
          <<: *check_changes
      - go/install:
          version: << pipeline.parameters.go-version >>
          cache: no
      - stop-background-apt
      - install-deps-apt
      - build-singularity
      - run:
          <<: *install_singularity
      - run:
          name: Run integration tests
          no_output_timeout: 20m
          command: |-
            make -C ./builddir integration-test

  e2e_tests:
    executor: ubuntu-machine
    steps:
      - checkout
      - run:
          <<: *check_changes
      - go/install:
          version: << pipeline.parameters.go-version >>
          cache: no
      - stop-background-apt
      - install-deps-apt
      - build-singularity
      - run:
          <<: *install_singularity
      - run:
          name: Run E2E tests
          no_output_timeout: 35m
          command: |-
            export E2E_PARALLEL=8 && \
            export E2E_DOCKER_USERNAME=$CIRCLE_CI_DOCKER_USERNAME && \
            export E2E_DOCKER_PASSWORD=$CIRCLE_CI_DOCKER_PASSWORD && \
            make -C ./builddir e2e-test
      - store_artifacts:
          path: builddir/e2e-cmd-report.txt

workflows:
  version: 2
  build_and_test:
    jobs:
      - go114-stretch
      - go114-alpine
      - go114-darwin
      - check_go_mod
      - short_unit_tests
      - integration_tests
      - e2e_tests
  rpmbuild:
    jobs:
      - rpmbuild-centos7
      - rpmbuild-centos8
